{"version":3,"sources":["pages/IndexPage.js","pages/UserCabinet.js","pages/ServiceRequest.js","App.js","serviceWorker.js","index.js"],"names":["IndexPage","props","state","cardList","axios","get","then","response","status","setState","data","list","this","className","to","type","Label","for","Input","name","id","placeholder","Button","src","alt","href","listItems","map","item","key","icon","description","length","renderServiceCards","Component","pluralize","numeralize","UserCabinet","activeTab","formFields","first_name","second_name","third_name","email","phone","inn","snils","passport","userRequests","toggle","bind","handleChangeField","tab","event","fieldType","target","value","last_name","father_name","Nav","tabs","NavItem","NavLink","classnames","active","onClick","TabContent","TabPane","tabId","Row","Col","md","FormGroup","onChange","toString","publish_date","eliminate_days","complete_date","renderUserRequests","ServiceRequest","handleFormSubmit","match","params","fields","prop","post","window","location","regularFields","additionalFields","Object","keys","filter","includes","reduce","obj","region","rajon","street","house","apartment","korpus","push","label","htmlFor","lg","renderAdditionslFields","App","path","exact","component","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a1515de9.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { Label, Input, Button } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nclass IndexPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      cardList: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"/api/groups?hash=hv123\").then(response => {\n      if (response.status === 200) {\n        this.setState({\n          cardList: response.data ? response.data : []\n        });\n      }\n    });\n  }\n\n  render() {\n    const list = this.state.cardList;\n    const renderServiceCards = list => {\n      const listItems = list.map((item) =>\n        <Link to={`/service-request/${item.id}`} className=\"item\" key={item.id}>\n          <div className=\"icon\">\n            <img src={item.icon} alt=\"\"/>\n          </div>\n          <div className=\"item-content\">\n            <div className=\"item-title\">{item.name}</div>\n            <div className=\"item-description\">{item.description}</div>\n          </div>\n        </Link>\n      );\n\n      if (listItems.length > 0) {\n        return (\n          <Fragment>{listItems}</Fragment>\n        );\n      }\n\n      return <Fragment/>;\n    };\n\n    return (\n      <div className=\"site-wrapper\">\n        <nav className=\"gov-nav\">\n          <div className=\"wrapper\">\n            <div className=\"subnav\">Другие сайты республики</div>\n            <div className=\"spacer\"></div>\n            <div className=\"translate-menu\">Rissian</div>\n            <Link to=\"/cabinet\" className=\"auth\">Личный кабинет</Link>\n          </div>\n        </nav>\n\n        <div className=\"top-part\">\n          <div className=\"wrapper\">\n              <header className=\"site-header\">\n                <div className=\"logo\">\n                  <div className=\"prime-text\">Государственные услуги <br/><span>Республики Татарстан</span></div>\n                </div>\n\n                <ul className=\"help-nav\">\n                  <li><Link to=\"/\">Каталог услуг</Link></li>\n                  <li><Link to=\"/\">Помощь и поддержка</Link></li>\n                  <li><Link to=\"/\">Оплата</Link></li>\n                </ul>\n                <button type=\"button\" className=\"mobile-menu-toggle\"></button>\n              </header>\n          </div>\n          <div className=\"wrapper\">\n            <div className=\"main-search-form\">\n              <Label for=\"search-form\" className=\"sr-only\">Email</Label>\n              <Input type=\"text\" name=\"email\" id=\"search-form\" placeholder=\"Введите название услуги\" />\n              <Button>Найти услугу</Button>\n            </div>\n            <div className=\"promo-columns\">\n              <div className=\"column login-column\">\n                <div className=\"icon\">\n                  <img src=\"/images/login-promo-icon.svg\" alt=\"\"/>\n                </div>\n                <div className=\"column-content\">\n                  <h3>Вход в личный кабинет</h3>\n                  <p>Войдите или зарегистрируйтесь чтобы получить полный доступ к электронным услугам</p>\n                  <a className=\"btn btn-secondary first-btn\" href=\"https://digital.codedream.ru/admin/login/?next=/\">Войти</a>\n                  <Button className=\"second-btn\">Зарегистрироваться</Button>\n                </div>\n              </div>\n              <div className=\"column\">\n                <div className=\"icon\">\n                </div>\n                <div className=\"column-content\">\n                  <h3>Уведомления о начислениях</h3>\n                  <p>Сохраните данные банковской карты и они будут автоматически подставлять при оплате</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bottom-part\">\n          <div className=\"wrapper\">\n            <div className=\"service-grid\">\n              {renderServiceCards(list)}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n// <Link to=\"/\" className=\"item\">\n//   <div className=\"icon\">\n//     <img src=\"/images/icon2.svg\" alt=\"\"/>\n//   </div>\n//   <div className=\"item-content\">\n//     <div className=\"item-title\">ЗАГС</div>\n//     <div className=\"item-description\">Подать заявление о регистрации брака,<br/> рождении ребёнка и прочих актов гражданского состояния</div>\n//   </div>\n// </Link>\n// <Link to=\"/\" className=\"item\">\n//   <div className=\"icon\">\n//     <img src=\"/images/icon3.svg\" alt=\"\"/>\n//   </div>\n//   <div className=\"item-content\">\n//     <div className=\"item-title\">Земля многодетным</div>\n//     <div className=\"item-description\">Подать комплект документов на предоставление земельных участков многодетным семьям</div>\n//   </div>\n// </Link>\n// <Link to=\"/\" className=\"item\">\n//   <div className=\"icon\">\n//     <img src=\"/images/icon4.svg\" alt=\"\"/>\n//   </div>\n//   <div className=\"item-content\">\n//     <div className=\"item-title\">Налоги</div>\n//     <div className=\"item-description\">С помощью данной услуги вы можете зарегистрировать юридическое лицо и проверить налоговую задолжность</div>\n//   </div>\n// </Link>\n// <Link to=\"/\" className=\"item\">\n//   <div className=\"icon\">\n//     <img src=\"/images/icon5.svg\" alt=\"\"/>\n//   </div>\n//   <div className=\"item-content\">\n//     <div className=\"item-title\">Пенсионный фонд</div>\n//     <div className=\"item-description\">Информация о размере пенсии<br/> и иных социальных выплатах</div>\n//   </div>\n// </Link>\n// <Link to=\"/\" className=\"item\">\n//   <div className=\"icon\">\n//     <img src=\"/images/icon2.svg\" alt=\"\"/>\n//   </div>\n//   <div className=\"item-content\">\n//     <div className=\"item-title\">Оплата штрафов</div>\n//     <div className=\"item-description\">Вы сможете проверить и оплатить начисления<br/> в ГИС ГМП</div>\n//   </div>\n// </Link>\n\n// <div className=\"site-footer\">\n//   <div className=\"wrapper\">\n//     <div className=\"footer-nav-columns\">\n//       <Row>\n//         <Col md=\"3\">\n//           <h3>Помощь и поддержка</h3>\n//           <ul>\n//             <li>\n//               <Link to=\"/\">\n//                 Вход и регистрация\n//               </Link>\n//             </li>\n//             <li>\n//               <Link to=\"/\">\n//                 Вопросы по оплате\n//               </Link>\n//             </li>\n//             <li>\n//               <Link to=\"/\">\n//                 Вопросы по личному кабинету\n//               </Link>\n//             </li>\n//             <li>\n//               <Link to=\"/\">\n//                 Автовладельцам\n//               </Link>\n//             </li>\n//             <li>\n//               <Link to=\"/\">\n//                 Центры обслуживания\n//               </Link>\n//             </li>\n//             <li>\n//               <Link to=\"/\">\n//                 Все вопросы и ответы\n//               </Link>\n//             </li>\n//           </ul>\n//         </Col>\n//         <Col md=\"3\">\n//           <h3>Информация о портале</h3>\n//           <ul>\n//             <li>\n//               <Link to=\"#\">\n//                 Новости\n//               </Link>\n//             </li>\n//             <li>\n//               <Link to=\"#\">\n//                 Информация о платежах\n//               </Link>\n//             </li>\n//             <li>\n//               <Link to=\"#\">\n//                 Правовая информация\n//               </Link>\n//             </li>\n//             <li>\n//               <Link to=\"#\">\n//                 О портале\n//               </Link>\n//             </li>\n//           </ul>\n\n//           <h3>\n//             Мобильные приложения\n//           </h3>\n//           <ul>\n//             <li>\n//               <Link to=\"#\">\n//                 Для граждан\n//               </Link>\n//             </li>\n//             <li>\n//               <Link to=\"#\">\n//                 Для бизнеса\n//               </Link>\n//             </li>\n//           </ul>\n//         </Col>\n//         <Col md=\"4\">\n//           <h3>\n//             Полезные ресурсы\n//           </h3>\n//           <li>\n//             <Link to=\"#\">\n//               Российская общественная инициатива\n//             </Link>\n//           </li>\n//           <li>\n//             <Link to=\"#\">\n//               Интернет-портал правовой информации\n//             </Link>\n//           </li>\n//         </Col>\n//       </Row>\n//     </div>\n//   </div>\n// </div>\n\nexport default IndexPage;\n","import React, { Component } from \"react\";\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Col, Row, FormGroup, Label, Input, Button } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport classnames from \"classnames\";\nimport axios from \"axios\";\nimport numeralize from \"numeralize-ru\";\n\nconst pluralize = numeralize.pluralize;\n\nclass UserCabinet extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeTab: '1',\n      formFields: {\n        first_name: \"\",\n        second_name: \"\",\n        third_name: \"\",\n        email: \"\",\n        phone: \"\",\n        inn: \"\",\n        snils: \"\",\n        passport: \"\"\n      },\n      userRequests: []\n    };\n\n    this.toggle = this.toggle.bind(this);\n    this.handleChangeField = this.handleChangeField.bind(this);\n  }\n\n  toggle(tab) {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      });\n    }\n  }\n\n  handleChangeField(event, fieldType) {\n    const formFields = this.state.formFields;\n\n    this.setState({\n      formFields: {\n        ...formFields,\n        [fieldType]: event.target.value\n      }\n    });\n  }\n\n  componentDidMount() {\n    axios.get(\"/api/client?hash=hv123\").then(response => {\n      if (response.status === 200) {\n        this.setState({\n          formFields: {\n            first_name: response.data.first_name,\n            last_name: response.data.last_name,\n            father_name: response.data.third_name,\n            email: response.data.email,\n            phone: response.data.phone,\n            inn: response.data.inn,\n            snils: response.data.snils,\n            passport: response.data.passport\n          }\n        });\n      }\n    });\n\n    axios.get(\"/api/requests?hash=hv123\").then(response => {\n      if (response.status === 200) {\n        this.setState({\n          userRequests: response.data ? response.data : []\n        });\n      }\n    });\n  }\n\n  render () {\n    const userRequests = this.state.userRequests;\n\n    const renderUserRequests = list => {\n      const listItems = list.map((item) =>\n        <div key={item.id.toString()} className={`item ${item.status && item.status === \"Принята\" ? 'status-accepted': ''}${item.status && item.status === \"В работе\" ? 'status-wip': ''}${item.status && item.status === \"Выполнена\" ? 'status-complete': ''}${item.status && item.status === \"Отклонена\" ? 'status-rejected': ''}`}>\n          <div className=\"item-name\">\n            {item.name}\n          </div>\n          { item.status && (\n            <div className=\"item-status\">\n              Статус заявки: {item.status}\n            </div>\n          ) }\n          {item.publish_date && (\n            <div className=\"item-publish-date\">\n              <strong>Дата подачи заявки:</strong> {item.publish_date}\n            </div>\n          )}\n          {item.eliminate_days && (\n            <div className=\"item-estimates\">\n              <strong>Сроки оказания услуги:</strong> {item.eliminate_days} {pluralize(item.eliminate_days, \"день\", \"дня\", \"дней\")}\n            </div>\n          )}\n          {\n            item.complete_date && (\n              <div className=\"item-complition-date\">\n                <strong>Дата вынесения решения:</strong> {item.complete_date}\n              </div>\n            )\n          }\n        </div>\n      );\n\n      if (listItems.length > 0) {\n        return (\n          <div className=\"service-request-list\">{listItems}</div>\n        );\n      }\n\n      return (\n        <div className=\"service-request-list\">\n          <div>Нет активных заявок</div>\n        </div>\n      );\n    };\n\n    return (\n      <div className=\"site-wrapper user-cabinet\">\n        <nav className=\"gov-nav\">\n          <div className=\"wrapper\">\n            <div className=\"subnav\">Другие сайты республики</div>\n            <div className=\"spacer\"></div>\n            <div className=\"translate-menu\">Rissian</div>\n            <div className=\"auth\">Личный кабинет</div>\n          </div>\n        </nav>\n\n        <div className=\"top-part\">\n          <div className=\"wrapper\">\n            <header className=\"site-header\">\n              <Link className=\"logo\" to=\"/\">\n                <div className=\"prime-text\">Государственные услуги <br/><span>Республики Татарстан</span></div>\n              </Link>\n\n              <ul className=\"help-nav\">\n                <li><Link to=\"/\">Каталог услуг</Link></li>\n                <li><Link to=\"/\">Помощь и поддержка</Link></li>\n                <li><Link to=\"/\">Оплата</Link></li>\n              </ul>\n            </header>\n          </div>\n        </div>\n\n        <div className=\"bottom-part\">\n          <div className=\"wrapper\">\n            <h1>Личный кабинет пользователя</h1>\n            <Nav tabs>\n              <NavItem>\n                <NavLink\n                  className={classnames({ active: this.state.activeTab === '1' })}\n                  onClick={() => { this.toggle('1'); }}\n                >\n                  Персональные данные\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink\n                  className={classnames({ active: this.state.activeTab === '2' })}\n                  onClick={() => { this.toggle('2'); }}\n                >\n                  Ваши заявки\n                </NavLink>\n              </NavItem>\n            </Nav>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <Row>\n                  <Col md=\"4\">\n                    <FormGroup>\n                      <Label for=\"second-name-control\">Фамилия</Label>\n                      <Input type=\"text\" name=\"second-name-control\" id=\"second-name-control\" value={this.state.formFields.last_name} onChange={(event) => this.handleChangeField(event, \"last_name\")} />\n                    </FormGroup>\n                  </Col>\n                  <Col md=\"4\">\n                    <FormGroup>\n                      <Label for=\"name-control\">Имя</Label>\n                      <Input type=\"text\" name=\"name-control\" id=\"name-control\" value={this.state.formFields.first_name} onChange={(event) => this.handleChangeField(event, \"first_name\")} />\n                    </FormGroup>\n                  </Col>\n                  <Col md=\"4\">\n                    <FormGroup>\n                      <Label for=\"father-name-control\">Отчество</Label>\n                      <Input type=\"text\" name=\"father-name-control\" id=\"father-name-control\" value={this.state.formFields.father_name} onChange={(event) => this.handleChangeField(event, \"father_name\")} />\n                    </FormGroup>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col md=\"4\">\n                    <FormGroup>\n                      <Label for=\"email-control\">E-mail</Label>\n                      <Input type=\"email\" name=\"email-control\" id=\"email-control\" value={this.state.formFields.email} onChange={(event) => this.handleChangeField(event, \"email\")} />\n                    </FormGroup>\n                  </Col>\n                  <Col md=\"4\">\n                    <FormGroup>\n                      <Label for=\"phone-control\">Телефон</Label>\n                      <Input type=\"phone\" name=\"phone-control\" id=\"phone-control\" value={this.state.formFields.phone} onChange={(event) => this.handleChangeField(event, \"phone\")} />\n                    </FormGroup>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col md=\"4\">\n                    <FormGroup>\n                      <Label for=\"inn-control\">ИНН</Label>\n                      <Input type=\"text\" name=\"inn-control\" id=\"inn-control\" value={this.state.formFields.inn} onChange={(event) => this.handleChangeField(event, \"inn\")} />\n                    </FormGroup>\n                  </Col>\n                  <Col md=\"4\">\n                    <FormGroup>\n                      <Label for=\"snils-control\">СНИЛС</Label>\n                      <Input type=\"text\" name=\"snils-control\" id=\"snils-control\" value={this.state.formFields.snils} onChange={(event) => this.handleChangeField(event, \"snils\")} />\n                    </FormGroup>\n                  </Col>\n                  <Col md=\"4\">\n                    <FormGroup>\n                      <Label for=\"passport-control\">Серия и номер паспорта</Label>\n                      <Input type=\"text\" name=\"passport-control\" id=\"passport-control\" value={this.state.formFields.passport} onChange={(event) => this.handleChangeField(event, \"passport\")} />\n                    </FormGroup>\n                  </Col>\n                </Row>\n                <div className=\"form-actions\">\n                  <Button>Сохранить</Button>\n                </div>\n              </TabPane>\n              <TabPane tabId=\"2\">\n                { renderUserRequests(userRequests) }\n              </TabPane>\n            </TabContent>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default UserCabinet;\n\n// <div className=\"service-request-list\">\n//                   <div className=\"item status-accepted\">\n//                     <div className=\"item-name\">\n//                       Выдача разрешения на строительство\n//                     </div>\n//                     <div className=\"item-status\">\n//                       Статус заявки: В работе\n//                     </div>\n//                     <div className=\"item-publish-date\">\n//                       <strong>Дата подачи заявки:</strong> 28.10.2019\n//                     </div>\n//                     <div className=\"item-estimates\">\n//                       <strong>Сроки оказания услуги:</strong> 30 дней\n//                     </div>\n//                   </div>\n//                   <div className=\"item status-wip\">\n//                     <div className=\"item-name\">\n//                       Выдача разрешения на строительство\n//                     </div>\n//                     <div className=\"item-status\">\n//                       Статус заявки: В работе\n//                     </div>\n//                     <div className=\"item-publish-date\">\n//                       <strong>Дата подачи заявки:</strong> 28.10.2019\n//                     </div>\n//                     <div className=\"item-estimates\">\n//                       <strong>Сроки оказания услуги:</strong> 30 дней\n//                     </div>\n//                   </div>\n//                   <div className=\"item status-complete\">\n//                     <div className=\"item-name\">\n//                       Выдача разрешения на строительство\n//                     </div>\n//                     <div className=\"item-status\">\n//                       Статус заявки: Завершена\n//                     </div>\n//                     <div className=\"item-publish-date\">\n//                       <strong>Дата подачи заявки:</strong> 28.10.2019\n//                     </div>\n//                     <div className=\"item-complition-date\">\n//                       <strong>Дата вынесения решения:</strong> 28.11.2019\n//                     </div>\n//                   </div>\n//                   <div className=\"item status-rejected\">\n//                     <div className=\"item-name\">\n//                       Выдача разрешения на строительство\n//                     </div>\n//                     <div className=\"item-status\">\n//                       Статус заявки: Отклонена\n//                     </div>\n//                     <div className=\"item-publish-date\">\n//                       <strong>Дата подачи заявки:</strong> 28.10.2019\n//                     </div>\n//                     <div className=\"item-estimates\">\n//                       <strong>Сроки оказания услуги:</strong> 30 дней\n//                     </div>\n//                   </div>\n//                 </div>\n","import React, { Component, Fragment } from \"react\";\nimport { Col, Row, FormGroup, Label, Input, Button } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport axios from \"axios\";\n\nclass ServiceRequest extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      formFields: {}\n    };\n\n    this.handleChangeField = this.handleChangeField.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n  }\n\n  handleChangeField(event, fieldType) {\n    const formFields = this.state.formFields;\n\n    this.setState({\n      formFields: {\n        ...formFields,\n        [fieldType]: {\n          ...formFields[fieldType],\n          value: event.target.value\n        }\n      }\n    });\n  }\n\n  componentDidMount() {\n    const { match } = this.props;\n\n    axios.get(`/api/template?hash=hv123&id=${match.params.id}`).then(response => {\n      if (response.status === 200) {\n        this.setState({\n          formFields: response.data ? response.data : {}\n        });\n      }\n    });\n  }\n\n  handleFormSubmit() {\n    const { match } = this.props;\n    let fields = {};\n    const formFields = this.state.formFields;\n\n    for (let prop in formFields) {\n      fields = {...fields, ...{ [prop]: formFields[prop].value }};\n    }\n\n    axios.post(\"/api/setrequest?hash=hv123\", {...fields, type: match.params.id}).then(() => {\n      window.location.href = \"https://digital.codedream.ru/#/\";\n    });\n  }\n\n  render() {\n    const formFields = this.state.formFields;\n    const regularFields = ['first_name', 'last_name', 'father_name', 'phone', 'email', 'region', 'rajon', 'street', 'house', 'apartment', 'korpus'];\n    const additionalFields = Object.keys(formFields)\n    .filter(key => !regularFields.includes(key))\n    .reduce((obj, key) => {\n      obj[key] = formFields[key];\n      return obj;\n    }, {});\n\n    const renderAdditionslFields = fields => {\n      let listItems = [];\n      for (let prop in fields) {\n        switch(fields[prop].type) {\n          case \"fileupload\":\n            listItems.push(\n              <Fragment key={`${fields[prop].type}-${fields[prop].key}`}>\n                <h3>{fields[prop].label}</h3>\n                <div className=\"drop-loader\">\n                  Перетащите файлы сюда или <label htmlFor=\"drop-loader\">загрузите вручную</label>\n                  <input type=\"file\" name=\"drop-loader\" id=\"drop-loader\"/>\n                </div>\n              </Fragment>\n            );\n            break;\n          case \"text\":\n            listItems.push(\n              <Row>\n                <Col lg=\"4\">\n                  <FormGroup>\n                    <Label for={`${fields[prop].key}-${fields[prop].type}`}>{fields[prop].label}</Label>\n                    <Input type=\"text\" name={`${fields[prop].key}-${fields[prop].type}`} id={`${fields[prop].key}-${fields[prop].type}`} value={this.state.formFields[prop].value} onChange={(event) => this.handleChangeField(event, prop)} />\n                  </FormGroup>\n                </Col>\n              </Row>\n            );\n            break;\n          default:\n            listItems.push(\n              <Fragment key={`${fields[prop].type}-${fields[prop].key}`} />\n            );\n            break;\n        }\n      }\n      // fields.forEach((item, index) => {\n      //   switch(item.type) {\n      //     case \"fileupload\":\n      //       listItems.push(\n      //         <Fragment key={`${item.type}-${item.key}`}>\n      //           <h3>{item.label}</h3>\n      //           <div className=\"drop-loader\">\n      //             Перетащите файлы сюда или <label htmlFor=\"drop-loader\">загрузите вручную</label>\n      //             <input type=\"file\" name=\"drop-loader\" id=\"drop-loader\"/>\n      //           </div>\n      //         </Fragment>\n      //       );\n      //       break;\n      //     case \"text\":\n      //       listItems.push(\n      //         <Row>\n      //           <Col lg=\"4\">\n      //             <FormGroup>\n      //               <Label for={`${item.key}-${item.type}`}>{item.label}</Label>\n      //               <Input type=\"text\" name={`${item.key}-${item.type}`} id={`${item.key}-${item.type}`} value={this.state.formFields[prop]} onChange={(event) => this.handleChangeField(event, prop)} />\n      //             </FormGroup>\n      //           </Col>\n      //         </Row>\n      //       );\n      //       break;\n      //     default:\n      //       listItems.push(\n      //         <Fragment key={`${item.type}-${item.key}`} />\n      //       );\n      //       break;\n      //   }\n      // });\n\n      if (listItems.length > 0) {\n        return (\n          <Fragment>{listItems}</Fragment>\n        );\n      }\n\n      return (\n        <Fragment />\n      );\n    }\n\n    return (\n      <div className=\"site-wrapper service-request-page\">\n        <nav className=\"gov-nav\">\n          <div className=\"wrapper\">\n            <div className=\"subnav\">Другие сайты республики</div>\n            <div className=\"spacer\"></div>\n            <div className=\"translate-menu\">Rissian</div>\n            <Link to=\"/cabinet\" className=\"auth\">Личный кабинет</Link>\n          </div>\n        </nav>\n\n        <div className=\"top-part\">\n          <div className=\"wrapper\">\n            <header className=\"site-header\">\n              <Link className=\"logo\" to=\"/\">\n                <div className=\"prime-text\">Государственные услуги <br/><span>Республики Татарстан</span></div>\n              </Link>\n\n              <ul className=\"help-nav\">\n                <li><Link to=\"/\">Каталог услуг</Link></li>\n                <li><Link to=\"/\">Помощь и поддержка</Link></li>\n                <li><Link to=\"/\">Оплата</Link></li>\n              </ul>\n            </header>\n          </div>\n        </div>\n\n        <div className=\"bottom-part\">\n          <div className=\"wrapper\">\n            <h1>Выдача заявления на строительство</h1>\n            {Object.keys(formFields).length !== 0 && (\n              <Fragment>\n                <h3>Ваши персональные данные</h3>\n                <Row>\n                  <Col md=\"4\">\n                    <FormGroup>\n                      <Label for=\"last-name-control\">Фамилия</Label>\n                      <Input type=\"text\" name=\"last-name-control\" id=\"last-name-control\" value={this.state.formFields.last_name.value} onChange={(event) => this.handleChangeField(event, \"last_name\")} />\n                    </FormGroup>\n                  </Col>\n                  <Col md=\"4\">\n                    <FormGroup>\n                      <Label for=\"name-control\">Имя</Label>\n                      <Input type=\"text\" name=\"name-control\" id=\"name-control\" value={this.state.formFields.first_name.value} onChange={(event) => this.handleChangeField(event, \"first_name\")} />\n                    </FormGroup>\n                  </Col>\n                  <Col md=\"4\">\n                    <FormGroup>\n                      <Label for=\"father-name-control\">Отчество</Label>\n                      <Input type=\"text\" name=\"father-name-control\" id=\"father-name-control\" value={this.state.formFields.father_name.value} onChange={(event) => this.handleChangeField(event, \"father_name\")} />\n                    </FormGroup>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col md=\"4\">\n                    <FormGroup>\n                      <Label for=\"phone-control\">Контактный телефон</Label>\n                      <Input type=\"phone\" name=\"phone-control\" id=\"phone-control\" value={this.state.formFields.phone.value} onChange={(event) => this.handleChangeField(event, \"phone\")} />\n                    </FormGroup>\n                  </Col>\n                  <Col md=\"4\">\n                    <FormGroup>\n                      <Label for=\"email-control\">E-mail</Label>\n                      <Input type=\"email\" name=\"email-control\" id=\"email-control\" value={this.state.formFields.email.value} onChange={(event) => this.handleChangeField(event, \"email\")} />\n                    </FormGroup>\n                  </Col>\n                </Row>\n                <h3>Адрес места пребывания</h3>\n                <Row>\n                  <Col md=\"4\">\n                    <FormGroup>\n                      <Label for=\"region-control\">Регион</Label>\n                      <Input type=\"text\" name=\"region-control\" id=\"region-control\" value={this.state.formFields.region.value} onChange={(event) => this.handleChangeField(event, \"region\")} />\n                    </FormGroup>\n                  </Col>\n                  <Col md=\"4\">\n                    <FormGroup>\n                      <Label for=\"rayon-control\">Район</Label>\n                      <Input type=\"text\" name=\"rayon-control\" id=\"rayon-control\" value={this.state.formFields.rajon.value} onChange={(event) => this.handleChangeField(event, \"rajon\")} />\n                    </FormGroup>\n                  </Col>\n                  <Col md=\"4\">\n                    <FormGroup>\n                      <Label for=\"street-control\">Улица</Label>\n                      <Input type=\"text\" name=\"street-control\" id=\"street-control\" value={this.state.formFields.street.value} onChange={(event) => this.handleChangeField(event, \"street\")} />\n                    </FormGroup>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col md=\"4\">\n                    <FormGroup>\n                      <Label for=\"house-control\">Дом</Label>\n                      <Input type=\"text\" name=\"house-control\" id=\"house-control\" value={this.state.formFields.house.value} onChange={(event) => this.handleChangeField(event, \"house\")} />\n                    </FormGroup>\n                  </Col>\n                  <Col md=\"4\">\n                    <FormGroup>\n                      <Label for=\"apartment-control\">Квартира</Label>\n                      <Input type=\"text\" name=\"apartment-control\" id=\"apartment-control\" value={this.state.formFields.apartment.value} onChange={(event) => this.handleChangeField(event, \"apartment\")} />\n                    </FormGroup>\n                  </Col>\n                  <Col md=\"4\">\n                    <FormGroup>\n                      <Label for=\"korpus-control\">Корпус</Label>\n                      <Input type=\"text\" name=\"korpus-control\" id=\"korpus-control\" value={this.state.formFields.korpus.value} onChange={(event) => this.handleChangeField(event, \"korpus\")} />\n                    </FormGroup>\n                  </Col>\n                </Row>\n              </Fragment>\n            )}\n            {Object.keys(additionalFields).length !== 0 && (\n              renderAdditionslFields(additionalFields)\n            )}\n            {(Object.keys(additionalFields).length !== 0 || Object.keys(formFields).length !== 0) && (\n              <div className=\"form-actions\">\n                <Button onClick={this.handleFormSubmit}>Отправить</Button>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ServiceRequest;\n","import React from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport IndexPage from \"./pages/IndexPage.js\";\nimport UserCabinet from \"./pages/UserCabinet.js\";\nimport ServiceRequest from \"./pages/ServiceRequest.js\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact component={IndexPage} />\n        <Route path=\"/cabinet\" exact component={UserCabinet} />\n        <Route path=\"/service-request/:id\" exact component={ServiceRequest} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css/normalize.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}